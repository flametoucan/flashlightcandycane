import java.util.Scanner;

public class pi_med_rekursion {

    private static int k = 0;
    private static int n;
    private static double[] a;
    private static double[] O; 
    private static double[] procent_of_Pi;

    public static void main(String args[])  {
        n();
        
        a = new double[n + 1];
        O = new double[n + 1];
        procent_of_Pi = new double[n + 1];

        a = calca(n);
        O = calcO(n, a);
        procent_of_Pi = calcPi(O);
        
        print();
    }
            
    public static int n() {
        Scanner input = new Scanner(System.in);
        System.out.println("Vad ska n vara?");
        n = input.nextInt();
        return n;
    }

    public static double[] calca(int n) {
        double[] a = new double[n + 1];
        a[0] = 2; 

        for (int k = 1; k <= n; k++) {
            a[k] = Math.sqrt(2 - 2 * Math.sqrt(1 - Math.pow(a[k - 1] / 2, 2))); 
        }

        return a;
    }

    public static double[] calcO(int n, double[] a) {
        k = 0;
        while(k <= n) {
            O[k] = Math.pow(2, k) * a[k];
            k++;
        }
        return O;  
    }
   
    public static double[] calcPi(double[] O) {
        k = 0;
        while(k <= n) {
            procent_of_Pi[k] = Math.abs(O[k] - Math.PI);
            k++;
        }
        return procent_of_Pi;
    }
    
    public static void print() {
        for (int i = 0; i <= n; i++) {                                                                                           
            System.out.println("När n är " + i + " är a = " + a[i] + ", och O = " + O[i] + " vilket är " + procent_of_Pi[i] + " ifrån π.");
        }
    }
}
